var bondage=function(){"use strict";class e{}class t{}class s{}class n{}class i{}class a{}class r{}var o={types:{Text:e,Shortcut:t,Conditional:s,Assignment:n,Literal:i,Expression:a,FunctionCall:r},DialogShortcutNode:class extends t{constructor(e,t,s,n=[],i){super(),this.type="DialogShortcutNode",this.text=e,this.content=t,this.lineNum=s.first_line,this.hashtags=n,this.conditionalExpression=i}},IfNode:class extends s{constructor(e,t){super(),this.type="IfNode",this.expression=e,this.statement=t}},IfElseNode:class extends s{constructor(e,t,s){super(),this.type="IfElseNode",this.expression=e,this.statement=t,this.elseStatement=s}},ElseNode:class extends s{constructor(e){super(),this.type="ElseNode",this.statement=e}},ElseIfNode:class extends s{constructor(e,t,s){super(),this.type="ElseIfNode",this.expression=e,this.statement=t,this.elseStatement=s}},TextNode:class extends e{constructor(e,t,s=[]){super(),this.type="TextNode",this.text=e,this.lineNum=t?t.first_line:-1,this.hashtags=s}},NumericLiteralNode:class extends i{constructor(e){super(),this.type="NumericLiteralNode",this.numericLiteral=e}},StringLiteralNode:class extends i{constructor(e){super(),this.type="StringLiteralNode",this.stringLiteral=e}},BooleanLiteralNode:class extends i{constructor(e){super(),this.type="BooleanLiteralNode",this.booleanLiteral=e}},VariableNode:class extends i{constructor(e){super(),this.type="VariableNode",this.variableName=e}},UnaryMinusExpressionNode:class extends a{constructor(e){super(),this.type="UnaryMinusExpressionNode",this.expression=e}},ArithmeticExpressionAddNode:class extends a{constructor(e,t){super(),this.type="ArithmeticExpressionAddNode",this.expression1=e,this.expression2=t}},ArithmeticExpressionMinusNode:class extends a{constructor(e,t){super(),this.type="ArithmeticExpressionMinusNode",this.expression1=e,this.expression2=t}},ArithmeticExpressionMultiplyNode:class extends a{constructor(e,t){super(),this.type="ArithmeticExpressionMultiplyNode",this.expression1=e,this.expression2=t}},ArithmeticExpressionExponentNode:class extends a{constructor(e,t){super(),this.type="ArithmeticExpressionExponentNode",this.expression1=e,this.expression2=t}},ArithmeticExpressionDivideNode:class extends a{constructor(e,t){super(),this.type="ArithmeticExpressionDivideNode",this.expression1=e,this.expression2=t}},ArithmeticExpressionModuloNode:class extends a{constructor(e,t){super(),this.type="ArithmeticExpressionModuloNode",this.expression1=e,this.expression2=t}},NegatedBooleanExpressionNode:class extends a{constructor(e){super(),this.type="NegatedBooleanExpressionNode",this.expression=e}},BooleanOrExpressionNode:class extends a{constructor(e,t){super(),this.type="BooleanOrExpressionNode",this.expression1=e,this.expression2=t}},BooleanAndExpressionNode:class extends a{constructor(e,t){super(),this.type="BooleanAndExpressionNode",this.expression1=e,this.expression2=t}},BooleanXorExpressionNode:class extends a{constructor(e,t){super(),this.type="BooleanXorExpressionNode",this.expression1=e,this.expression2=t}},EqualToExpressionNode:class extends a{constructor(e,t){super(),this.type="EqualToExpressionNode",this.expression1=e,this.expression2=t}},NotEqualToExpressionNode:class extends a{constructor(e,t){super(),this.type="NotEqualToExpressionNode",this.expression1=e,this.expression2=t}},GreaterThanExpressionNode:class extends a{constructor(e,t){super(),this.type="GreaterThanExpressionNode",this.expression1=e,this.expression2=t}},GreaterThanOrEqualToExpressionNode:class extends a{constructor(e,t){super(),this.type="GreaterThanOrEqualToExpressionNode",this.expression1=e,this.expression2=t}},LessThanExpressionNode:class extends a{constructor(e,t){super(),this.type="LessThanExpressionNode",this.expression1=e,this.expression2=t}},LessThanOrEqualToExpressionNode:class extends a{constructor(e,t){super(),this.type="LessThanOrEqualToExpressionNode",this.expression1=e,this.expression2=t}},SetVariableEqualToNode:class extends n{constructor(e,t){super(),this.type="SetVariableEqualToNode",this.variableName=e,this.expression=t}},FunctionResultNode:class extends r{constructor(e,t,s,n=[]){super(),this.type="FunctionResultNode",this.functionName=e,this.args=t,this.lineNum=s?s.first_line:-1,this.hashtags=n}},JumpNode:class extends r{constructor(e){super(),this.type="JumpNode",this.destination=e}},StopNode:class extends r{constructor(){super(),this.type="StopNode"}},InlineExpressionNode:class extends a{constructor(e,t,s=[]){super(),this.type="InlineExpressionNode",this.expression=e,this.lineNum=t.first_line,this.hashtags=s}}};const d={Whitespace:null,Indent:null,Dedent:null,EndOfLine:/\n/,EndOfInput:null,Number:/-?[0-9]+(\.[0-9+])?/,String:/"([^"\\]*(?:\\.[^"\\]*)*)"/,BeginCommand:/<</,EndCommand:/>>/,Variable:/\$([A-Za-z0-9_.])+/,ShortcutOption:/->/,Hashtag:/#([^(\s|#|//)]+)/,Comment:/\/\/.*/,OptionStart:/\[\[/,OptionDelimit:/\|/,OptionEnd:/\]\]/,If:/if(?!\w)/,ElseIf:/elseif(?!\w)/,Else:/else(?!\w)/,EndIf:/endif(?!\w)/,Jump:/jump(?!\w)/,Stop:/stop(?!\w)/,Set:/set(?!\w)/,Declare:/declare(?!\w)/,As:/as(?!\w)/,ExplicitType:/(String|Number|Bool)(?=>>)/,True:/true(?!\w)/,False:/false(?!\w)/,Null:/null(?!\w)/,LeftParen:/\(/,RightParen:/\)/,Comma:/,/,UnaryMinus:/-(?!\s)/,EqualTo:/(==|is(?!\w)|eq(?!\w))/,GreaterThan:/(>|gt(?!\w))/,GreaterThanOrEqualTo:/(>=|gte(?!\w))/,LessThan:/(<|lt(?!\w))/,LessThanOrEqualTo:/(<=|lte(?!\w))/,NotEqualTo:/(!=|neq(?!\w))/,Or:/(\|\||or(?!\w))/,And:/(&&|and(?!\w))/,Xor:/(\^|xor(?!\w))/,Not:/(!|not(?!\w))/,EqualToOrAssign:/(=|to(?!\w))/,Add:/\+/,Minus:/-/,Exponent:/\*\*/,Multiply:/\*/,Divide:/\//,Modulo:/%/,AddAssign:/\+=/,MinusAssign:/-=/,MultiplyAssign:/\*=/,DivideAssign:/\/=/,Identifier:/[a-zA-Z0-9_:.]+/,EscapedCharacter:/\\./,Text:/[^\\]/,BeginInlineExp:/{/,EndInlineExp:/}/};class l{constructor(){this.transitions=[],this.textRule=null,this.isTrackingNextIndentation=!1,this.isEmittingEndOfLineTokens=!1}addTransition(e,t,s){return this.transitions.push({token:e,regex:d[e],state:t||null,delimitsText:s||!1}),this}addTextRule(e,t){if(this.textRule)throw new Error("Cannot add more than one text rule to a state.");const s=[];this.transitions.forEach((e=>{e.delimitsText&&s.push(`(${e.regex.source})`)}));const n=`((?!${s.join("|")}).)+`;return this.addTransition(e,t),this.textRule=this.transitions[this.transitions.length-1],this.textRule.regex=new RegExp(n),this}setTrackNextIndentation(e){return this.isTrackingNextIndentation=e,this}}var h={makeStates:function(){return{base:(new l).addTransition("EscapedCharacter",null,!0).addTransition("Comment",null,!0).addTransition("Hashtag",null,!0).addTransition("BeginCommand","command",!0).addTransition("BeginInlineExp","inlineExpression",!0).addTransition("ShortcutOption","shortcutOption").addTextRule("Text"),shortcutOption:(new l).setTrackNextIndentation(!0).addTransition("EscapedCharacter",null,!0).addTransition("Comment",null,!0).addTransition("Hashtag",null,!0).addTransition("BeginCommand","expression",!0).addTransition("BeginInlineExp","inlineExpressionInShortcut",!0).addTextRule("Text","base"),command:(new l).addTransition("If","expression").addTransition("Else").addTransition("ElseIf","expression").addTransition("EndIf").addTransition("Set","assignment").addTransition("Declare","declare").addTransition("Jump","jump").addTransition("Stop","stop").addTransition("EndCommand","base",!0).addTransition("Identifier","commandArg",!0).addTextRule("Text"),commandArg:(new l).addTransition("BeginInlineExp","inlineExpressionInCommand",!0).addTransition("EndCommand","base",!0).addTransition("LeftParen","commandParenArgOrExpression").addTransition("Variable").addTransition("Number").addTransition("String").addTransition("True").addTransition("False").addTransition("Identifier").addTransition("Comma").addTransition("RightParen"),commandParenArgOrExpression:(new l).addTransition("EndCommand","base",!0).addTransition("LeftParen","expression").addTransition("Variable","expression").addTransition("Number","expression").addTransition("String").addTransition("True").addTransition("False").addTransition("Null").addTransition("RightParen"),assignment:(new l).addTransition("Variable").addTransition("EqualToOrAssign","expression"),declare:(new l).addTransition("Variable").addTransition("EndCommand","base").addTransition("EqualToOrAssign","expression"),jump:(new l).addTransition("Identifier").addTransition("BeginInlineExp","inlineExpressionInCommand",!0).addTransition("EndCommand","base",!0),stop:(new l).addTransition("EndCommand","base",!0),expression:(new l).addTransition("As").addTransition("ExplicitType").addTransition("EndCommand","base").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("EqualTo").addTransition("EqualToOrAssign").addTransition("NotEqualTo").addTransition("GreaterThanOrEqualTo").addTransition("GreaterThan").addTransition("LessThanOrEqualTo").addTransition("LessThan").addTransition("Add").addTransition("UnaryMinus").addTransition("Minus").addTransition("Exponent").addTransition("Multiply").addTransition("Divide").addTransition("Modulo").addTransition("And").addTransition("Or").addTransition("Xor").addTransition("Not").addTransition("Variable").addTransition("Comma").addTransition("True").addTransition("False").addTransition("Null").addTransition("Identifier").addTextRule(),inlineExpression:(new l).addTransition("EndInlineExp","base").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("EqualTo").addTransition("EqualToOrAssign").addTransition("NotEqualTo").addTransition("GreaterThanOrEqualTo").addTransition("GreaterThan").addTransition("LessThanOrEqualTo").addTransition("LessThan").addTransition("Add").addTransition("UnaryMinus").addTransition("Minus").addTransition("Exponent").addTransition("Multiply").addTransition("Divide").addTransition("Modulo").addTransition("And").addTransition("Or").addTransition("Xor").addTransition("Not").addTransition("Variable").addTransition("Comma").addTransition("True").addTransition("False").addTransition("Null").addTransition("Identifier").addTextRule("Text","base"),inlineExpressionInCommand:(new l).addTransition("EndInlineExp","commandArg").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("EqualTo").addTransition("EqualToOrAssign").addTransition("NotEqualTo").addTransition("GreaterThanOrEqualTo").addTransition("GreaterThan").addTransition("LessThanOrEqualTo").addTransition("LessThan").addTransition("Add").addTransition("UnaryMinus").addTransition("Minus").addTransition("Exponent").addTransition("Multiply").addTransition("Divide").addTransition("Modulo").addTransition("And").addTransition("Or").addTransition("Xor").addTransition("Not").addTransition("Variable").addTransition("Comma").addTransition("True").addTransition("False").addTransition("Null").addTransition("Identifier").addTextRule("Text","base"),inlineExpressionInShortcut:(new l).addTransition("EndInlineExp","shortcutOption").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("EqualTo").addTransition("EqualToOrAssign").addTransition("NotEqualTo").addTransition("GreaterThanOrEqualTo").addTransition("GreaterThan").addTransition("LessThanOrEqualTo").addTransition("LessThan").addTransition("Add").addTransition("UnaryMinus").addTransition("Minus").addTransition("Exponent").addTransition("Multiply").addTransition("Divide").addTransition("Modulo").addTransition("And").addTransition("Or").addTransition("Xor").addTransition("Not").addTransition("Variable").addTransition("Comma").addTransition("True").addTransition("False").addTransition("Null").addTransition("Identifier").addTextRule("Text","base")}}};var c=function(e,t,s,n){for(s=s||{},n=e.length;n--;s[e[n]]=t);return s},u=[1,19],p=[1,20],T=[1,12],x=[1,18],E=[1,17],m=[5,18,19,24,35,37,80],y=[1,24],f=[1,25],N=[1,27],g=[1,28],b=[5,14,16,22,24,35,37],w=[5,14,16,18,19,22,24,35,37,80],O=[1,31],$=[1,32],v=[1,35],L=[1,36],A=[1,37],I=[1,38],k=[5,14,16,18,22,24,35,37,80],C=[1,42],S=[1,52],q=[1,51],_=[1,46],R=[1,47],M=[1,48],B=[1,53],D=[1,54],P=[1,55],F=[1,56],G=[1,57],V=[5,16,18,19,24,35,37,80],j=[1,68],U=[1,79],X=[1,80],J=[1,81],H=[1,82],z=[1,83],Z=[1,84],W=[1,85],K=[1,86],Q=[1,87],Y=[1,88],ee=[1,89],te=[1,90],se=[1,91],ne=[1,92],ie=[1,93],ae=[27,50,55,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,74,81],re=[27,38,50,55,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81],oe=[27,38,75,76,77,78,79,80],de=[27,50,55,57,58,59,60,61,64,65,66,67,68,69,70,71,72,74,81],le=[27,50,55,74,81],he=[1,132],ce=[1,133],ue=[27,50,55,57,58,64,65,66,67,68,69,70,71,72,74,81],pe=[27,50,55,64,65,66,67,68,69,70,71,72,74,81],Te=[55,74],xe=[16,18,19,24,35,80],Ee={trace:function(){},yy:{},symbols_:{error:2,node:3,statements:4,EndOfInput:5,conditionalBlock:6,statement:7,text:8,shortcut:9,genericCommand:10,assignmentCommand:11,jumpCommand:12,stopCommand:13,Comment:14,hashtags:15,EndOfLine:16,escapedTextRaw:17,Text:18,EscapedCharacter:19,escapedText:20,inlineExpression:21,Hashtag:22,conditional:23,BeginCommand:24,If:25,expression:26,EndCommand:27,EndIf:28,additionalConditionalBlocks:29,else:30,Else:31,elseif:32,ElseIf:33,shortcutOption:34,ShortcutOption:35,Indent:36,Dedent:37,Identifier:38,genericCommandArguments:39,genericCommandArgument:40,literal:41,Jump:42,Stop:43,setCommandInner:44,declareCommandInner:45,Set:46,Variable:47,EqualToOrAssign:48,Declare:49,As:50,ExplicitType:51,functionArgument:52,functionCall:53,LeftParen:54,RightParen:55,UnaryMinus:56,Add:57,Minus:58,Exponent:59,Multiply:60,Divide:61,Modulo:62,Not:63,Or:64,And:65,Xor:66,EqualTo:67,NotEqualTo:68,GreaterThan:69,GreaterThanOrEqualTo:70,LessThan:71,LessThanOrEqualTo:72,parenExpressionArgs:73,Comma:74,True:75,False:76,Number:77,String:78,Null:79,BeginInlineExp:80,EndInlineExp:81,$accept:0,$end:1},terminals_:{2:"error",5:"EndOfInput",14:"Comment",16:"EndOfLine",18:"Text",19:"EscapedCharacter",22:"Hashtag",24:"BeginCommand",25:"If",27:"EndCommand",28:"EndIf",31:"Else",33:"ElseIf",35:"ShortcutOption",36:"Indent",37:"Dedent",38:"Identifier",42:"Jump",43:"Stop",46:"Set",47:"Variable",48:"EqualToOrAssign",49:"Declare",50:"As",51:"ExplicitType",54:"LeftParen",55:"RightParen",56:"UnaryMinus",57:"Add",58:"Minus",59:"Exponent",60:"Multiply",61:"Divide",62:"Modulo",63:"Not",64:"Or",65:"And",66:"Xor",67:"EqualTo",68:"NotEqualTo",69:"GreaterThan",70:"GreaterThanOrEqualTo",71:"LessThan",72:"LessThanOrEqualTo",74:"Comma",75:"True",76:"False",77:"Number",78:"String",79:"Null",80:"BeginInlineExp",81:"EndInlineExp"},productions_:[0,[3,2],[4,1],[4,2],[4,1],[4,2],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,2],[7,2],[7,2],[17,1],[17,1],[17,2],[17,2],[20,1],[8,1],[8,1],[8,2],[15,1],[15,2],[23,4],[6,6],[6,4],[6,2],[30,3],[30,2],[32,4],[32,2],[29,5],[29,5],[29,3],[34,2],[34,3],[34,2],[34,2],[34,3],[34,2],[9,1],[9,5],[10,3],[10,4],[39,1],[39,2],[40,1],[40,1],[40,1],[12,4],[12,4],[13,3],[11,3],[11,3],[44,4],[45,4],[45,6],[26,1],[26,1],[26,3],[26,2],[26,3],[26,3],[26,3],[26,3],[26,3],[26,3],[26,2],[26,3],[26,3],[26,3],[26,3],[26,3],[26,3],[26,3],[26,3],[26,3],[53,3],[53,4],[73,3],[73,1],[52,1],[52,1],[52,1],[41,1],[41,1],[41,1],[41,1],[41,1],[21,3]],performAction:function(e,t,s,n,i,a,r){var o=a.length-1;switch(i){case 1:return a[o-1].flat();case 2:case 4:case 7:case 8:case 9:case 10:case 11:case 21:case 46:case 82:case 20:this.$=[a[o]];break;case 3:case 22:this.$=a[o-1].concat(a[o]);break;case 5:case 47:this.$=a[o-1].concat([a[o]]);break;case 6:case 60:case 15:case 48:case 49:case 59:case 83:case 84:this.$=a[o];break;case 12:case 14:case 28:case 31:case 32:case 54:case 61:case 25:case 39:case 41:this.$=a[o-1];break;case 13:this.$=a[o-1].map((e=>Object.assign(e,{hashtags:a[o]})));break;case 16:this.$=a[o].substring(1);break;case 17:this.$=a[o-1].concat(a[o].substring(1));break;case 18:this.$=a[o-1].substring(1).concat(a[o]);break;case 19:this.$=new n.TextNode(a[o],this._$);break;case 23:this.$=[a[o].substring(1)];break;case 24:this.$=[a[o-1].substring(1)].concat(a[o]);break;case 26:this.$=new n.IfNode(a[o-5],a[o-3].flat());break;case 27:this.$=new n.IfElseNode(a[o-3],a[o-1].flat(),a[o]);break;case 29:case 30:this.$=void 0;break;case 33:this.$=new n.ElseNode(a[o-3].flat());break;case 34:this.$=new n.ElseIfNode(a[o-4],a[o-3].flat());break;case 35:this.$=new n.ElseIfNode(a[o-2],a[o-1].flat(),a[o]);break;case 36:this.$={text:a[o]};break;case 37:this.$={text:a[o-1],conditional:a[o]};break;case 38:this.$={...a[o-1],hashtags:a[o]};break;case 40:this.$={...a[o-2],hashtags:a[o-1]};break;case 42:this.$=new n.DialogShortcutNode(a[o].text,void 0,this._$,a[o].hashtags,a[o].conditional);break;case 43:this.$=new n.DialogShortcutNode(a[o-4].text,a[o-1].flat(),this._$,a[o-4].hashtags,a[o-4].conditional);break;case 44:this.$=new n.FunctionResultNode(a[o-1],[],this._$);break;case 45:this.$=new n.FunctionResultNode(a[o-2],a[o-1],this._$);break;case 50:this.$=new n.TextNode(a[o]);break;case 51:case 52:this.$=new n.JumpNode(a[o-1]);break;case 53:this.$=new n.StopNode;break;case 55:this.$=null;break;case 56:this.$=new n.SetVariableEqualToNode(a[o-2].substring(1),a[o]);break;case 57:this.$=null,n.registerDeclaration(a[o-2].substring(1),a[o]);break;case 58:this.$=null,n.registerDeclaration(a[o-4].substring(1),a[o-2],a[o]);break;case 62:this.$=new n.UnaryMinusExpressionNode(a[o]);break;case 63:this.$=new n.ArithmeticExpressionAddNode(a[o-2],a[o]);break;case 64:this.$=new n.ArithmeticExpressionMinusNode(a[o-2],a[o]);break;case 65:this.$=new n.ArithmeticExpressionExponentNode(a[o-2],a[o]);break;case 66:this.$=new n.ArithmeticExpressionMultiplyNode(a[o-2],a[o]);break;case 67:this.$=new n.ArithmeticExpressionDivideNode(a[o-2],a[o]);break;case 68:this.$=new n.ArithmeticExpressionModuloNode(a[o-2],a[o]);break;case 69:this.$=new n.NegatedBooleanExpressionNode(a[o]);break;case 70:this.$=new n.BooleanOrExpressionNode(a[o-2],a[o]);break;case 71:this.$=new n.BooleanAndExpressionNode(a[o-2],a[o]);break;case 72:this.$=new n.BooleanXorExpressionNode(a[o-2],a[o]);break;case 73:this.$=new n.EqualToExpressionNode(a[o-2],a[o]);break;case 74:this.$=new n.NotEqualToExpressionNode(a[o-2],a[o]);break;case 75:this.$=new n.GreaterThanExpressionNode(a[o-2],a[o]);break;case 76:this.$=new n.GreaterThanOrEqualToExpressionNode(a[o-2],a[o]);break;case 77:this.$=new n.LessThanExpressionNode(a[o-2],a[o]);break;case 78:this.$=new n.LessThanOrEqualToExpressionNode(a[o-2],a[o]);break;case 79:this.$=new n.FunctionResultNode(a[o-2],[]);break;case 80:this.$=new n.FunctionResultNode(a[o-3],a[o-1]);break;case 81:this.$=a[o-2].concat([a[o]]);break;case 85:this.$=new n.VariableNode(a[o].substring(1));break;case 86:case 87:this.$=new n.BooleanLiteralNode(a[o]);break;case 88:this.$=new n.NumericLiteralNode(a[o]);break;case 89:this.$=new n.StringLiteralNode(a[o]);break;case 90:this.$=new n.NullLiteralNode(a[o]);break;case 91:this.$=new n.InlineExpressionNode(a[o-1],this._$)}},table:[{3:1,4:2,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:u,19:p,20:13,21:14,23:5,24:T,34:15,35:x,80:E},{1:[3]},{5:[1,21],6:22,7:23,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:u,19:p,20:13,21:14,23:5,24:T,34:15,35:x,80:E},c(m,[2,2],{16:y}),c(m,[2,4],{15:26,14:f,16:N,22:g}),{16:[1,29]},c(b,[2,6],{20:13,21:14,17:16,8:30,18:u,19:p,80:E}),c(w,[2,7]),c(w,[2,8]),c(w,[2,9]),c(w,[2,10]),c(w,[2,11]),{25:O,38:$,42:v,43:L,44:33,45:34,46:A,49:I},c(w,[2,20]),c(w,[2,21]),c(m,[2,42],{15:40,14:[1,41],16:[1,39],22:g}),c(k,[2,19],{19:C}),{21:49,26:43,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{8:58,17:16,18:u,19:p,20:13,21:14,80:E},c(w,[2,15]),c([5,14,16,22,24,35,37,80],[2,16],{17:59,18:u,19:p}),{1:[2,1]},c(m,[2,3],{16:y}),c(m,[2,5],{15:26,14:f,16:N,22:g}),c(V,[2,28]),c(w,[2,12]),c(w,[2,13]),c(w,[2,14]),c([5,14,16,18,19,24,35,37,80],[2,23],{15:60,22:g}),{4:61,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:u,19:p,20:13,21:14,23:5,24:T,34:15,35:x,80:E},c(b,[2,22],{20:13,21:14,17:16,8:30,18:u,19:p,80:E}),{21:49,26:62,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{21:66,27:[1,63],38:j,39:64,40:65,41:67,75:B,76:D,77:P,78:F,79:G,80:E},{27:[1,69]},{27:[1,70]},{21:72,38:[1,71],80:E},{27:[1,73]},{47:[1,74]},{47:[1,75]},c(w,[2,41],{36:[1,76]}),c([5,16,18,19,22,24,35,37,80],[2,38],{14:[1,77]}),c(w,[2,39]),c(w,[2,17]),{57:U,58:X,59:J,60:H,61:z,62:Z,64:W,65:K,66:Q,67:Y,68:ee,69:te,70:se,71:ne,72:ie,81:[1,78]},c(ae,[2,59]),c(ae,[2,60]),{21:49,26:94,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{21:49,26:95,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{21:49,26:96,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},c(ae,[2,83]),c(ae,[2,84]),c(ae,[2,85]),{54:[1,97]},c(re,[2,86]),c(re,[2,87]),c(re,[2,88]),c(re,[2,89]),c(re,[2,90]),c([5,14,16,22,35,37],[2,36],{20:13,21:14,17:16,8:30,23:98,18:u,19:p,24:[1,99],80:E}),c(k,[2,18],{19:C}),c(w,[2,24]),{6:22,7:23,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:u,19:p,20:13,21:14,23:5,24:[1,100],29:101,30:102,32:103,34:15,35:x,80:E},{27:[1,104],57:U,58:X,59:J,60:H,61:z,62:Z,64:W,65:K,66:Q,67:Y,68:ee,69:te,70:se,71:ne,72:ie},c(w,[2,44]),{21:66,27:[1,105],38:j,40:106,41:67,75:B,76:D,77:P,78:F,79:G,80:E},c(oe,[2,46]),c(oe,[2,48]),c(oe,[2,49]),c(oe,[2,50]),c(w,[2,54]),c(w,[2,55]),{27:[1,107]},{27:[1,108]},c(w,[2,53]),{48:[1,109]},{48:[1,110]},{4:111,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:u,19:p,20:13,21:14,23:5,24:T,34:15,35:x,80:E},c(w,[2,40]),c([5,14,16,18,19,22,24,27,35,37,38,50,55,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81],[2,91]),{21:49,26:112,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{21:49,26:113,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{21:49,26:114,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{21:49,26:115,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{21:49,26:116,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{21:49,26:117,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{21:49,26:118,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{21:49,26:119,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{21:49,26:120,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{21:49,26:121,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{21:49,26:122,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{21:49,26:123,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{21:49,26:124,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{21:49,26:125,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{21:49,26:126,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{55:[1,127],57:U,58:X,59:J,60:H,61:z,62:Z,64:W,65:K,66:Q,67:Y,68:ee,69:te,70:se,71:ne,72:ie},c(de,[2,62],{62:Z}),c(le,[2,69],{57:U,58:X,59:J,60:H,61:z,62:Z,64:W,65:K,66:Q,67:Y,68:ee,69:te,70:se,71:ne,72:ie}),{21:49,26:130,38:S,41:50,47:q,52:44,53:45,54:_,55:[1,128],56:R,63:M,73:129,75:B,76:D,77:P,78:F,79:G,80:E},c(w,[2,37]),{25:O},{25:O,28:[1,131],31:he,33:ce,38:$,42:v,43:L,44:33,45:34,46:A,49:I},c(V,[2,27]),{4:134,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,16:[1,135],17:16,18:u,19:p,20:13,21:14,23:5,24:T,34:15,35:x,80:E},{4:136,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,16:[1,137],17:16,18:u,19:p,20:13,21:14,23:5,24:T,34:15,35:x,80:E},c(w,[2,25]),c(w,[2,45]),c(oe,[2,47]),c(w,[2,51]),c(w,[2,52]),{21:49,26:138,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{21:49,26:139,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{6:22,7:23,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:u,19:p,20:13,21:14,23:5,24:T,34:15,35:x,37:[1,140],80:E},c(ue,[2,63],{59:J,60:H,61:z,62:Z}),c(ue,[2,64],{59:J,60:H,61:z,62:Z}),c(de,[2,65],{62:Z}),c(de,[2,66],{62:Z}),c(de,[2,67],{62:Z}),c(le,[2,68],{57:U,58:X,59:J,60:H,61:z,62:Z,64:W,65:K,66:Q,67:Y,68:ee,69:te,70:se,71:ne,72:ie}),c([27,50,55,64,74,81],[2,70],{57:U,58:X,59:J,60:H,61:z,62:Z,65:K,66:Q,67:Y,68:ee,69:te,70:se,71:ne,72:ie}),c([27,50,55,64,65,74,81],[2,71],{57:U,58:X,59:J,60:H,61:z,62:Z,66:Q,67:Y,68:ee,69:te,70:se,71:ne,72:ie}),c([27,50,55,64,65,66,74,81],[2,72],{57:U,58:X,59:J,60:H,61:z,62:Z,67:Y,68:ee,69:te,70:se,71:ne,72:ie}),c(pe,[2,73],{57:U,58:X,59:J,60:H,61:z,62:Z}),c(pe,[2,74],{57:U,58:X,59:J,60:H,61:z,62:Z}),c(pe,[2,75],{57:U,58:X,59:J,60:H,61:z,62:Z}),c(pe,[2,76],{57:U,58:X,59:J,60:H,61:z,62:Z}),c(pe,[2,77],{57:U,58:X,59:J,60:H,61:z,62:Z}),c(pe,[2,78],{57:U,58:X,59:J,60:H,61:z,62:Z}),c(ae,[2,61]),c(ae,[2,79]),{55:[1,141],74:[1,142]},c(Te,[2,82],{57:U,58:X,59:J,60:H,61:z,62:Z,64:W,65:K,66:Q,67:Y,68:ee,69:te,70:se,71:ne,72:ie}),{27:[1,143]},{27:[1,144]},{21:49,26:145,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},{6:22,7:23,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:u,19:p,20:13,21:14,23:5,24:[1,146],34:15,35:x,80:E},c(xe,[2,30]),{6:22,7:23,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:u,19:p,20:13,21:14,23:5,24:[1,147],29:148,30:102,32:103,34:15,35:x,80:E},c(xe,[2,32]),{27:[2,56],57:U,58:X,59:J,60:H,61:z,62:Z,64:W,65:K,66:Q,67:Y,68:ee,69:te,70:se,71:ne,72:ie},{27:[2,57],50:[1,149],57:U,58:X,59:J,60:H,61:z,62:Z,64:W,65:K,66:Q,67:Y,68:ee,69:te,70:se,71:ne,72:ie},c(w,[2,43]),c(ae,[2,80]),{21:49,26:150,38:S,41:50,47:q,52:44,53:45,54:_,56:R,63:M,75:B,76:D,77:P,78:F,79:G,80:E},c(V,[2,26]),c(xe,[2,29]),{27:[1,151],57:U,58:X,59:J,60:H,61:z,62:Z,64:W,65:K,66:Q,67:Y,68:ee,69:te,70:se,71:ne,72:ie},{25:O,28:[1,152],38:$,42:v,43:L,44:33,45:34,46:A,49:I},{25:O,28:[1,153],31:he,33:ce,38:$,42:v,43:L,44:33,45:34,46:A,49:I},c(V,[2,35]),{51:[1,154]},c(Te,[2,81],{57:U,58:X,59:J,60:H,61:z,62:Z,64:W,65:K,66:Q,67:Y,68:ee,69:te,70:se,71:ne,72:ie}),c(xe,[2,31]),{27:[1,155]},{27:[1,156]},{27:[2,58]},c(V,[2,33]),c(V,[2,34])],defaultActions:{21:[2,1],154:[2,58]},parseError:function(e,t){if(!t.recoverable){var s=new Error(e);throw s.hash=t,s}this.trace(e)},parse:function(e){var t=this,s=[0],n=[null],i=[],a=this.table,r="",o=0,d=0,l=2,h=1,c=i.slice.call(arguments,1),u=Object.create(this.lexer),p={yy:{}};for(var T in this.yy)Object.prototype.hasOwnProperty.call(this.yy,T)&&(p.yy[T]=this.yy[T]);u.setInput(e,p.yy),p.yy.lexer=u,p.yy.parser=this,void 0===u.yylloc&&(u.yylloc={});var x=u.yylloc;i.push(x);var E=u.options&&u.options.ranges;"function"==typeof p.yy.parseError?this.parseError=p.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var m,y,f,N,g,b,w,O,$=function(){var e;return"number"!=typeof(e=u.lex()||h)&&(e=t.symbols_[e]||e),e},v={};;){if(y=s[s.length-1],this.defaultActions[y]?f=this.defaultActions[y]:(null==m&&(m=$()),f=a[y]&&a[y][m]),void 0===f||!f.length||!f[0]){var L="";for(g in O=[],a[y])this.terminals_[g]&&g>l&&O.push("'"+this.terminals_[g]+"'");L=u.showPosition?"Parse error on line "+(o+1)+":\n"+u.showPosition()+"\nExpecting "+O.join(", ")+", got '"+(this.terminals_[m]||m)+"'":"Parse error on line "+(o+1)+": Unexpected "+(m==h?"end of input":"'"+(this.terminals_[m]||m)+"'"),this.parseError(L,{text:u.match,token:this.terminals_[m]||m,line:u.yylineno,loc:x,expected:O})}if(f[0]instanceof Array&&f.length>1)throw new Error("Parse Error: multiple actions possible at state: "+y+", token: "+m);switch(f[0]){case 1:s.push(m),n.push(u.yytext),i.push(u.yylloc),s.push(f[1]),m=null,d=u.yyleng,r=u.yytext,o=u.yylineno,x=u.yylloc;break;case 2:if(b=this.productions_[f[1]][1],v.$=n[n.length-b],v._$={first_line:i[i.length-(b||1)].first_line,last_line:i[i.length-1].last_line,first_column:i[i.length-(b||1)].first_column,last_column:i[i.length-1].last_column},E&&(v._$.range=[i[i.length-(b||1)].range[0],i[i.length-1].range[1]]),void 0!==(N=this.performAction.apply(v,[r,d,o,p.yy,f[1],n,i].concat(c))))return N;b&&(s=s.slice(0,-1*b*2),n=n.slice(0,-1*b),i=i.slice(0,-1*b)),s.push(this.productions_[f[1]][0]),n.push(v.$),i.push(v._$),w=a[s[s.length-2]][s[s.length-1]],s.push(w);break;case 3:return!0}}return!0}};function me(){this.yy={}}me.prototype=Ee,Ee.Parser=me,Ee.lexer=new class{constructor(){this.states=h.makeStates(),this.state="base",this.originalText="",this.lines=[],this.indentation=[[0,!1]],this.shouldTrackNextIndentation=!1,this.previousLevelOfIndentation=0,this.reset()}reset(){this.yytext="",this.yylloc={first_column:1,first_line:1,last_column:1,last_line:1},this.yylineno=1}lex(){if(this.isAtTheEndOfText()){this.yytext="";const e=this.indentation.pop();return e&&e[1]?"Dedent":"EndOfInput"}return this.isAtTheEndOfLine()?(this.advanceLine(),"EndOfLine"):this.lexNextTokenOnCurrentLine()}advanceLine(){this.yylineno+=1;const e=this.getCurrentLine().replace(/\t/,"    ");this.lines[this.yylineno-1]=e,this.previousLevelOfIndentation=this.getLastRecordedIndentation()[0],this.yytext="",this.yylloc={first_column:1,first_line:this.yylineno,last_column:1,last_line:this.yylineno}}lexNextTokenOnCurrentLine(){const e=this.getCurrentLineIndentation();if(this.shouldTrackNextIndentation&&e>this.previousLevelOfIndentation)return this.indentation.push([e,!0]),this.shouldTrackNextIndentation=!1,this.yylloc.first_column=this.yylloc.last_column,this.yylloc.last_column+=e,this.yytext="","Indent";if(e<this.getLastRecordedIndentation()[0]){if(this.indentation.pop()[1])return this.yytext="",this.previousLevelOfIndentation=this.getLastRecordedIndentation()[0],"Dedent";this.lexNextTokenOnCurrentLine()}e===this.previousLevelOfIndentation&&1===this.yylloc.last_column&&(this.yylloc.last_column+=e);const t=this.getState().transitions;for(let s=0,n=t.length;s<n;s+=1){const n=t[s],i=this.getCurrentLine().substring(this.yylloc.last_column-1).match(n.regex);if(null!==i&&0===i.index){const t=i[0];this.yytext=this.getCurrentLine().substr(this.yylloc.last_column-1,t.length),"String"===n.token&&(this.yytext=this.yytext.substring(1,this.yytext.length-1).replace(/\\/g,"")),this.yylloc.first_column=this.yylloc.last_column,this.yylloc.last_column+=t.length,n.state&&(this.setState(n.state),this.shouldTrackNextIndentation&&this.getLastRecordedIndentation()[0]<e&&this.indentation.push([e,!1]));const s=this.states[n.state],a=!s||s.transitions.find((e=>"Text"===e.token));if("EndInlineExp"!==n.token&&"EscapedCharacter"!==n.token||!a){const e=this.getCurrentLine().substring(this.yylloc.last_column-1).match(/^\s*/);e[0]&&(this.yylloc.last_column+=e[0].length)}return n.token}}throw new Error(`Invalid syntax in: ${this.getCurrentLine()}`)}setState(e){if(void 0===this.states[e])throw new Error(`Cannot set the unknown state [${e}]`);this.state=e,this.getState().isTrackingNextIndentation&&(this.shouldTrackNextIndentation=!0)}setInput(e){this.originalText=e.replace(/(\r\n)/g,"\n").replace(/\r/g,"\n").replace(/[\n\r]+$/,""),this.lines=this.originalText.split("\n"),this.reset()}getState(){return this.states[this.state]}getCurrentLine(){return this.lines[this.yylineno-1]}getCurrentLineIndentation(){return this.getCurrentLine().match(/^(\s*)/g)[0].length}getLastRecordedIndentation(){return 0===this.indentation.length?[0,!1]:this.indentation[this.indentation.length-1]}isAtTheEndOfText(){return this.isAtTheEndOfLine()&&this.yylloc.first_line>=this.lines.length}isAtTheEndOfLine(){return this.yylloc.last_column>this.getCurrentLine().length}},Ee.yy=o,Ee.yy.declarations={},Ee.yy.registerDeclaration=function(e,t,s){if(!this.areDeclarationsHandled){if(this.declarations[e])throw new Error(`Duplicate declaration found for variable: ${e}`);this.declarations[e]={variableName:e,expression:t,explicitType:s}}};class ye{}class fe extends ye{constructor(e,t=!0,s=[],n){super(),this.text=e,this.isAvailable=t,this.hashtags=s,this.metadata=n}}var Ne={Result:ye,TextResult:class extends ye{constructor(e,t,s){super(),this.text=e,this.hashtags=t,this.metadata=s}},CommandResult:class extends ye{constructor(e,t,s,n){super(),this.name=e,this.args=t,this.hashtags=s,this.metadata=n}},OptionsResult:class extends ye{constructor(e,t){super(),this.options=e.map((e=>new fe(e.text,e.isAvailable,e.hashtags))),this.metadata=t}select(e=-1){if(e<0||e>=this.options.length)throw new Error(`Cannot select option #${e}, there are ${this.options.length} options`);this.selected=e}}};var ge=class{constructor(){this.data={}}set(e,t){this.data[e]=t}get(e){return this.data[e]}};const be=o.types;var we={Runner:class{constructor(){this.yarnNodes={},this.variables=new ge,this.functions={},this.visited={},this.registerFunction("visited",(e=>!!this.visited[e]))}load(e){let t=e;"string"==typeof e&&(t=function(e){const t=[],s=e.split(/\r?\n+/).filter((e=>!e.match(/^\s*$/)));let n,i=null,a=!1,r=0;for(;"#"===s[r][0]||!s[r].trim();)n||(n=[]),n.push(s[r].substr(1).trim()),r+=1;for(;r<s.length;r+=1)if("==="===s[r].trim())a=!1,n&&(i.filetags=n),t.push(i),i=null;else if(a)i.body+=`${s[r]}\n`;else if("---"===s[r].trim())a=!0,i.body="";else if(s[r].indexOf(":")>-1){const[e,t]=s[r].split(":"),n=e.trim(),a=t.trim();if("body"!==n){if(null==i&&(i={}),i[n])throw new Error(`Duplicate tag on node: ${n}`);i[n]=a}}return t}(e)),t.forEach((e=>{if(!e.title)throw new Error(`Node needs a title: ${JSON.stringify(e)}`);if(e.title.split(".").length>1)throw new Error(`Node title cannot contain a dot: ${e.title}`);if(!e.body)throw new Error(`Node needs a body: ${JSON.stringify(e)}`);if(this.yarnNodes[e.title])throw new Error(`Duplicate node title: ${e.title}`);this.yarnNodes[e.title]=e})),Ee.yy.areDeclarationsHandled=!1,Ee.yy.declarations={},this.handleDeclarations(t),Ee.yy.areDeclarationsHandled=!0}setVariableStorage(e){if("function"!=typeof e.set||"function"!=typeof e.get)throw new Error('Variable Storage object must contain both a "set" and "get" function');this.variables=e}handleDeclarations(e){const t={Number:0,String:"",Boolean:!1},s=e.reduce(((e,t)=>[...e,...t.body.split(/\r?\n+/)]),[]).reduce(((e,t)=>t.match(/^<<declare .+>>/)?[...e,t]:e),[]);s.length&&Ee.parse(s.join("\n")),Object.entries(Ee.yy.declarations).forEach((([e,{expression:s,explicitType:n}])=>{const i=this.evaluateExpressionOrLiteral(s);if(n&&typeof i!=typeof t[n])throw new Error(`Cannot declare value ${i} as type ${n} for variable ${e}`);this.variables.get(e)||this.variables.set(e,i)}))}registerFunction(e,t){if("function"!=typeof t)throw new Error("Registered function must be...well...a function");this.functions[e]=t}*run(e){const t=this.yarnNodes[e];if(void 0===t)throw new Error(`Node "${e}" does not exist`);this.visited[e]=!0;const s=Array.from(Ee.parse(t.body)),n={...t};return delete n.body,yield*this.evalNodes(s,n,!0)}*evalNodes(e,t,s){let n=[],i=null,a="";const r=e.filter(Boolean);for(let e=0;e<r.length;e+=1){const o=r[e],d=r[e+1];if(i instanceof be.Shortcut&&!(o instanceof be.Shortcut)){const e=yield*this.handleShortcuts(n,t);if(e&&e.stop)return e;n=[]}if(o instanceof be.Text||o instanceof be.Expression)a+=this.evaluateExpressionOrLiteral(o).toString(),d&&o.lineNum===d.lineNum&&(d instanceof be.Text||d instanceof be.Expression)||(yield new Ne.TextResult(a,o.hashtags,t),a="");else if(o instanceof be.Shortcut)n.push(o);else if(o instanceof be.Assignment)this.evaluateAssignment(o);else if(o instanceof be.Conditional){const e=this.evaluateConditional(o);if(e){const s=yield*this.evalNodes(e,t);if(s&&s.stop)return s}}else{if("JumpNode"===o.type)return yield*this.run(o.destination),s?void 0:{stop:!0};if("StopNode"===o.type)return s?void 0:{stop:!0};const e=o.args.map(this.evaluateExpressionOrLiteral,this);yield new Ne.CommandResult(o.functionName,e,o.hashtags,t)}i=o}if(n.length>0)return yield*this.handleShortcuts(n,t)}*handleShortcuts(e,t){const s=e.map((e=>{let t=!0,s="";return e.conditionalExpression&&!this.evaluateExpressionOrLiteral(e.conditionalExpression)&&(t=!1),s=e.text.reduce(((e,t)=>e+this.evaluateExpressionOrLiteral(t).toString()),""),Object.assign(e,{isAvailable:t,text:s})})),n=new Ne.OptionsResult(s,t);if(yield n,"number"!=typeof n.selected)throw new Error("No option selected before resuming dialogue");{const e=s[n.selected];if(e.content)return yield*this.evalNodes(e.content,t)}}evaluateAssignment(e){const t=this.evaluateExpressionOrLiteral(e.expression),s=this.variables.get(e.variableName);if(s&&typeof s!=typeof t)throw new Error(`Variable ${e.variableName} is already type ${typeof s}; cannot set equal to ${t} of type ${typeof t}`);this.variables.set(e.variableName,t)}evaluateConditional(e){if("IfNode"===e.type){if(this.evaluateExpressionOrLiteral(e.expression))return e.statement}else{if("IfElseNode"!==e.type&&"ElseIfNode"!==e.type)return e.statement;if(this.evaluateExpressionOrLiteral(e.expression))return e.statement;if(e.elseStatement)return this.evaluateConditional(e.elseStatement)}return null}evaluateFunctionCall(e){if(this.functions[e.functionName])return this.functions[e.functionName](...e.args.map(this.evaluateExpressionOrLiteral,this));throw new Error(`Function "${e.functionName}" not found`)}evaluateExpressionOrLiteral(e){const t={UnaryMinusExpressionNode:e=>-e,ArithmeticExpressionAddNode:(e,t)=>e+t,ArithmeticExpressionMinusNode:(e,t)=>e-t,ArithmeticExpressionExponentNode:(e,t)=>e**t,ArithmeticExpressionMultiplyNode:(e,t)=>e*t,ArithmeticExpressionDivideNode:(e,t)=>e/t,ArithmeticExpressionModuloNode:(e,t)=>e%t,NegatedBooleanExpressionNode:e=>!e,BooleanOrExpressionNode:(e,t)=>e||t,BooleanAndExpressionNode:(e,t)=>e&&t,BooleanXorExpressionNode:(e,t)=>!!(e^t),EqualToExpressionNode:(e,t)=>e===t,NotEqualToExpressionNode:(e,t)=>e!==t,GreaterThanExpressionNode:(e,t)=>e>t,GreaterThanOrEqualToExpressionNode:(e,t)=>e>=t,LessThanExpressionNode:(e,t)=>e<t,LessThanOrEqualToExpressionNode:(e,t)=>e<=t,TextNode:e=>e.text,NumericLiteralNode:e=>parseFloat(e.numericLiteral),StringLiteralNode:e=>`${e.stringLiteral}`,BooleanLiteralNode:e=>"true"===e.booleanLiteral,VariableNode:e=>this.variables.get(e.variableName),FunctionResultNode:e=>this.evaluateFunctionCall(e),InlineExpressionNode:e=>e}[e.type];if(!t)throw new Error(`node type not recognized: ${e.type}`);return t(e instanceof be.Expression?this.evaluateExpressionOrLiteral(e.expression||e.expression1):e,e.expression2?this.evaluateExpressionOrLiteral(e.expression2):e)}},TextResult:Ne.TextResult,CommandResult:Ne.CommandResult,OptionsResult:Ne.OptionsResult};return we}();
