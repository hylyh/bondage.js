!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.bondage=t():e.bondage=t()}(this,(function(){return(()=>{var e={722:e=>{e.exports=function(e){const t=[],n=e.split(/\r?\n+/).filter((e=>!e.match(/^\s*$/)));let s,i=null,r=!1,a=0;for(;"#"===n[a][0]||!n[a].trim();)s||(s=[]),s.push(n[a].substr(1).trim()),a+=1;for(;a<n.length;a+=1)if("==="===n[a].trim())r=!1,s&&(i.filetags=s),t.push(i),i=null;else if(r)i.body+=`${n[a]}\n`;else if("---"===n[a].trim())r=!0,i.body="";else if(n[a].indexOf(":")>-1){const[e,t]=n[a].split(":"),s=e.trim(),r=t.trim();if("body"!==s){if(null==i&&(i={}),i[s])throw new Error(`Duplicate tag on node: ${s}`);i[s]=r}}return t}},826:e=>{"use strict";e.exports=class{constructor(){this.data={}}set(e,t){this.data[e]=t}get(e){return this.data[e]}}}},t={};function n(s){var i=t[s];if(void 0!==i)return i.exports;var r=t[s]={exports:{}};return e[s](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var s={};return(()=>{"use strict";n.r(s),n.d(s,{default:()=>je});class e{}class t{}class i{}class r{}class a{}class o{}class d{}const l={types:{Text:e,Shortcut:t,Conditional:i,Assignment:r,Literal:a,Expression:o,FunctionCall:d},DialogShortcutNode:class extends t{constructor(e,t,n,s=[],i){super(),this.type="DialogShortcutNode",this.text=e,this.content=t,this.lineNum=n.first_line,this.hashtags=s,this.conditionalExpression=i}},IfNode:class extends i{constructor(e,t){super(),this.type="IfNode",this.expression=e,this.statement=t}},IfElseNode:class extends i{constructor(e,t,n){super(),this.type="IfElseNode",this.expression=e,this.statement=t,this.elseStatement=n}},ElseNode:class extends i{constructor(e){super(),this.type="ElseNode",this.statement=e}},ElseIfNode:class extends i{constructor(e,t,n){super(),this.type="ElseIfNode",this.expression=e,this.statement=t,this.elseStatement=n}},TextNode:class extends e{constructor(e,t,n=[]){super(),this.type="TextNode",this.text=e,this.lineNum=t?t.first_line:-1,this.hashtags=n}},NumericLiteralNode:class extends a{constructor(e){super(),this.type="NumericLiteralNode",this.numericLiteral=e}},StringLiteralNode:class extends a{constructor(e){super(),this.type="StringLiteralNode",this.stringLiteral=e}},BooleanLiteralNode:class extends a{constructor(e){super(),this.type="BooleanLiteralNode",this.booleanLiteral=e}},VariableNode:class extends a{constructor(e){super(),this.type="VariableNode",this.variableName=e}},UnaryMinusExpressionNode:class extends o{constructor(e){super(),this.type="UnaryMinusExpressionNode",this.expression=e}},ArithmeticExpressionAddNode:class extends o{constructor(e,t){super(),this.type="ArithmeticExpressionAddNode",this.expression1=e,this.expression2=t}},ArithmeticExpressionMinusNode:class extends o{constructor(e,t){super(),this.type="ArithmeticExpressionMinusNode",this.expression1=e,this.expression2=t}},ArithmeticExpressionMultiplyNode:class extends o{constructor(e,t){super(),this.type="ArithmeticExpressionMultiplyNode",this.expression1=e,this.expression2=t}},ArithmeticExpressionExponentNode:class extends o{constructor(e,t){super(),this.type="ArithmeticExpressionExponentNode",this.expression1=e,this.expression2=t}},ArithmeticExpressionDivideNode:class extends o{constructor(e,t){super(),this.type="ArithmeticExpressionDivideNode",this.expression1=e,this.expression2=t}},ArithmeticExpressionModuloNode:class extends o{constructor(e,t){super(),this.type="ArithmeticExpressionModuloNode",this.expression1=e,this.expression2=t}},NegatedBooleanExpressionNode:class extends o{constructor(e){super(),this.type="NegatedBooleanExpressionNode",this.expression=e}},BooleanOrExpressionNode:class extends o{constructor(e,t){super(),this.type="BooleanOrExpressionNode",this.expression1=e,this.expression2=t}},BooleanAndExpressionNode:class extends o{constructor(e,t){super(),this.type="BooleanAndExpressionNode",this.expression1=e,this.expression2=t}},BooleanXorExpressionNode:class extends o{constructor(e,t){super(),this.type="BooleanXorExpressionNode",this.expression1=e,this.expression2=t}},EqualToExpressionNode:class extends o{constructor(e,t){super(),this.type="EqualToExpressionNode",this.expression1=e,this.expression2=t}},NotEqualToExpressionNode:class extends o{constructor(e,t){super(),this.type="NotEqualToExpressionNode",this.expression1=e,this.expression2=t}},GreaterThanExpressionNode:class extends o{constructor(e,t){super(),this.type="GreaterThanExpressionNode",this.expression1=e,this.expression2=t}},GreaterThanOrEqualToExpressionNode:class extends o{constructor(e,t){super(),this.type="GreaterThanOrEqualToExpressionNode",this.expression1=e,this.expression2=t}},LessThanExpressionNode:class extends o{constructor(e,t){super(),this.type="LessThanExpressionNode",this.expression1=e,this.expression2=t}},LessThanOrEqualToExpressionNode:class extends o{constructor(e,t){super(),this.type="LessThanOrEqualToExpressionNode",this.expression1=e,this.expression2=t}},SetVariableEqualToNode:class extends r{constructor(e,t){super(),this.type="SetVariableEqualToNode",this.variableName=e,this.expression=t}},FunctionResultNode:class extends d{constructor(e,t,n,s=[]){super(),this.type="FunctionResultNode",this.functionName=e,this.args=t,this.lineNum=n?n.first_line:-1,this.hashtags=s}},JumpNode:class extends d{constructor(e){super(),this.type="JumpNode",this.destination=e}},StopNode:class extends d{constructor(){super(),this.type="StopNode"}},InlineExpressionNode:class extends o{constructor(e,t,n=[]){super(),this.type="InlineExpressionNode",this.expression=e,this.lineNum=t.first_line,this.hashtags=n}}},c={Whitespace:null,Indent:null,Dedent:null,EndOfLine:/\n/,EndOfInput:null,Number:/-?[0-9]+(\.[0-9+])?/,String:/"([^"\\]*(?:\\.[^"\\]*)*)"/,BeginCommand:/<</,EndCommand:/>>/,Variable:/\$([A-Za-z0-9_.])+/,ShortcutOption:/->/,Hashtag:/#([^(\s|#|//)]+)/,Comment:/\/\/.*/,OptionStart:/\[\[/,OptionDelimit:/\|/,OptionEnd:/\]\]/,If:/if(?!\w)/,ElseIf:/elseif(?!\w)/,Else:/else(?!\w)/,EndIf:/endif(?!\w)/,Jump:/jump(?!\w)/,Stop:/stop(?!\w)/,Set:/set(?!\w)/,Declare:/declare(?!\w)/,As:/as(?!\w)/,ExplicitType:/(String|Number|Bool)(?=>>)/,True:/true(?!\w)/,False:/false(?!\w)/,Null:/null(?!\w)/,LeftParen:/\(/,RightParen:/\)/,Comma:/,/,UnaryMinus:/-(?!\s)/,EqualTo:/(==|is(?!\w)|eq(?!\w))/,GreaterThan:/(>|gt(?!\w))/,GreaterThanOrEqualTo:/(>=|gte(?!\w))/,LessThan:/(<|lt(?!\w))/,LessThanOrEqualTo:/(<=|lte(?!\w))/,NotEqualTo:/(!=|neq(?!\w))/,Or:/(\|\||or(?!\w))/,And:/(&&|and(?!\w))/,Xor:/(\^|xor(?!\w))/,Not:/(!|not(?!\w))/,EqualToOrAssign:/(=|to(?!\w))/,Add:/\+/,Minus:/-/,Exponent:/\*\*/,Multiply:/\*/,Divide:/\//,Modulo:/%/,AddAssign:/\+=/,MinusAssign:/-=/,MultiplyAssign:/\*=/,DivideAssign:/\/=/,Identifier:/[a-zA-Z0-9_:.]+/,EscapedCharacter:/\\./,Text:/[^\\]/,BeginInlineExp:/{/,EndInlineExp:/}/},h=class{constructor(){this.transitions=[],this.textRule=null,this.isTrackingNextIndentation=!1,this.isEmittingEndOfLineTokens=!1}addTransition(e,t,n){return this.transitions.push({token:e,regex:c[e],state:t||null,delimitsText:n||!1}),this}addTextRule(e,t){if(this.textRule)throw new Error("Cannot add more than one text rule to a state.");const n=[];this.transitions.forEach((e=>{e.delimitsText&&n.push(`(${e.regex.source})`)}));const s=`((?!${n.join("|")}).)+`;return this.addTransition(e,t),this.textRule=this.transitions[this.transitions.length-1],this.textRule.regex=new RegExp(s),this}setTrackNextIndentation(e){return this.isTrackingNextIndentation=e,this}},u=function(){return{base:(new h).addTransition("EscapedCharacter",null,!0).addTransition("Comment",null,!0).addTransition("Hashtag",null,!0).addTransition("BeginCommand","command",!0).addTransition("BeginInlineExp","inlineExpression",!0).addTransition("ShortcutOption","shortcutOption").addTextRule("Text"),shortcutOption:(new h).setTrackNextIndentation(!0).addTransition("EscapedCharacter",null,!0).addTransition("Comment",null,!0).addTransition("Hashtag",null,!0).addTransition("BeginCommand","expression",!0).addTransition("BeginInlineExp","inlineExpressionInShortcut",!0).addTextRule("Text","base"),command:(new h).addTransition("If","expression").addTransition("Else").addTransition("ElseIf","expression").addTransition("EndIf").addTransition("Set","assignment").addTransition("Declare","declare").addTransition("Jump","jump").addTransition("Stop","stop").addTransition("EndCommand","base",!0).addTransition("Identifier","commandArg",!0).addTextRule("Text"),commandArg:(new h).addTransition("BeginInlineExp","inlineExpressionInCommand",!0).addTransition("EndCommand","base",!0).addTransition("LeftParen","commandParenArgOrExpression").addTransition("Variable").addTransition("Number").addTransition("String").addTransition("True").addTransition("False").addTransition("Identifier").addTransition("Comma").addTransition("RightParen"),commandParenArgOrExpression:(new h).addTransition("EndCommand","base",!0).addTransition("LeftParen","expression").addTransition("Variable","expression").addTransition("Number","expression").addTransition("String").addTransition("True").addTransition("False").addTransition("Null").addTransition("RightParen"),assignment:(new h).addTransition("Variable").addTransition("EqualToOrAssign","expression"),declare:(new h).addTransition("Variable").addTransition("EndCommand","base").addTransition("EqualToOrAssign","expression"),jump:(new h).addTransition("Identifier").addTransition("BeginInlineExp","inlineExpressionInCommand",!0).addTransition("EndCommand","base",!0),stop:(new h).addTransition("EndCommand","base",!0),expression:(new h).addTransition("As").addTransition("ExplicitType").addTransition("EndCommand","base").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("EqualTo").addTransition("EqualToOrAssign").addTransition("NotEqualTo").addTransition("GreaterThanOrEqualTo").addTransition("GreaterThan").addTransition("LessThanOrEqualTo").addTransition("LessThan").addTransition("Add").addTransition("UnaryMinus").addTransition("Minus").addTransition("Exponent").addTransition("Multiply").addTransition("Divide").addTransition("Modulo").addTransition("And").addTransition("Or").addTransition("Xor").addTransition("Not").addTransition("Variable").addTransition("Comma").addTransition("True").addTransition("False").addTransition("Null").addTransition("Identifier").addTextRule(),inlineExpression:(new h).addTransition("EndInlineExp","base").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("EqualTo").addTransition("EqualToOrAssign").addTransition("NotEqualTo").addTransition("GreaterThanOrEqualTo").addTransition("GreaterThan").addTransition("LessThanOrEqualTo").addTransition("LessThan").addTransition("Add").addTransition("UnaryMinus").addTransition("Minus").addTransition("Exponent").addTransition("Multiply").addTransition("Divide").addTransition("Modulo").addTransition("And").addTransition("Or").addTransition("Xor").addTransition("Not").addTransition("Variable").addTransition("Comma").addTransition("True").addTransition("False").addTransition("Null").addTransition("Identifier").addTextRule("Text","base"),inlineExpressionInCommand:(new h).addTransition("EndInlineExp","commandArg").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("EqualTo").addTransition("EqualToOrAssign").addTransition("NotEqualTo").addTransition("GreaterThanOrEqualTo").addTransition("GreaterThan").addTransition("LessThanOrEqualTo").addTransition("LessThan").addTransition("Add").addTransition("UnaryMinus").addTransition("Minus").addTransition("Exponent").addTransition("Multiply").addTransition("Divide").addTransition("Modulo").addTransition("And").addTransition("Or").addTransition("Xor").addTransition("Not").addTransition("Variable").addTransition("Comma").addTransition("True").addTransition("False").addTransition("Null").addTransition("Identifier").addTextRule("Text","base"),inlineExpressionInShortcut:(new h).addTransition("EndInlineExp","shortcutOption").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("EqualTo").addTransition("EqualToOrAssign").addTransition("NotEqualTo").addTransition("GreaterThanOrEqualTo").addTransition("GreaterThan").addTransition("LessThanOrEqualTo").addTransition("LessThan").addTransition("Add").addTransition("UnaryMinus").addTransition("Minus").addTransition("Exponent").addTransition("Multiply").addTransition("Divide").addTransition("Modulo").addTransition("And").addTransition("Or").addTransition("Xor").addTransition("Not").addTransition("Variable").addTransition("Comma").addTransition("True").addTransition("False").addTransition("Null").addTransition("Identifier").addTextRule("Text","base")}};function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function T(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){x(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function x(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var E=function(e,t,n,s){for(n=n||{},s=e.length;s--;n[e[s]]=t);return n},y=[1,19],f=[1,20],m=[1,12],g=[1,18],N=[1,17],b=[5,18,19,24,35,37,80],w=[1,24],O=[1,25],v=[1,27],$=[1,28],L=[5,14,16,22,24,35,37],A=[5,14,16,18,19,22,24,35,37,80],I=[1,31],k=[1,32],C=[1,35],S=[1,36],_=[1,37],q=[1,38],P=[5,14,16,18,22,24,35,37,80],M=[1,42],j=[1,52],D=[1,51],R=[1,46],B=[1,47],F=[1,48],G=[1,53],V=[1,54],U=[1,55],X=[1,56],J=[1,57],H=[5,16,18,19,24,35,37,80],z=[1,68],Z=[1,79],W=[1,80],K=[1,81],Q=[1,82],Y=[1,83],ee=[1,84],te=[1,85],ne=[1,86],se=[1,87],ie=[1,88],re=[1,89],ae=[1,90],oe=[1,91],de=[1,92],le=[1,93],ce=[27,50,55,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,74,81],he=[27,38,50,55,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81],ue=[27,38,75,76,77,78,79,80],pe=[27,50,55,57,58,59,60,61,64,65,66,67,68,69,70,71,72,74,81],Te=[27,50,55,74,81],xe=[1,132],Ee=[1,133],ye=[27,50,55,57,58,64,65,66,67,68,69,70,71,72,74,81],fe=[27,50,55,64,65,66,67,68,69,70,71,72,74,81],me=[55,74],ge=[16,18,19,24,35,80],Ne={trace:function(){},yy:{},symbols_:{error:2,node:3,statements:4,EndOfInput:5,conditionalBlock:6,statement:7,text:8,shortcut:9,genericCommand:10,assignmentCommand:11,jumpCommand:12,stopCommand:13,Comment:14,hashtags:15,EndOfLine:16,escapedTextRaw:17,Text:18,EscapedCharacter:19,escapedText:20,inlineExpression:21,Hashtag:22,conditional:23,BeginCommand:24,If:25,expression:26,EndCommand:27,EndIf:28,additionalConditionalBlocks:29,else:30,Else:31,elseif:32,ElseIf:33,shortcutOption:34,ShortcutOption:35,Indent:36,Dedent:37,Identifier:38,genericCommandArguments:39,genericCommandArgument:40,literal:41,Jump:42,Stop:43,setCommandInner:44,declareCommandInner:45,Set:46,Variable:47,EqualToOrAssign:48,Declare:49,As:50,ExplicitType:51,functionArgument:52,functionCall:53,LeftParen:54,RightParen:55,UnaryMinus:56,Add:57,Minus:58,Exponent:59,Multiply:60,Divide:61,Modulo:62,Not:63,Or:64,And:65,Xor:66,EqualTo:67,NotEqualTo:68,GreaterThan:69,GreaterThanOrEqualTo:70,LessThan:71,LessThanOrEqualTo:72,parenExpressionArgs:73,Comma:74,True:75,False:76,Number:77,String:78,Null:79,BeginInlineExp:80,EndInlineExp:81,$accept:0,$end:1},terminals_:{2:"error",5:"EndOfInput",14:"Comment",16:"EndOfLine",18:"Text",19:"EscapedCharacter",22:"Hashtag",24:"BeginCommand",25:"If",27:"EndCommand",28:"EndIf",31:"Else",33:"ElseIf",35:"ShortcutOption",36:"Indent",37:"Dedent",38:"Identifier",42:"Jump",43:"Stop",46:"Set",47:"Variable",48:"EqualToOrAssign",49:"Declare",50:"As",51:"ExplicitType",54:"LeftParen",55:"RightParen",56:"UnaryMinus",57:"Add",58:"Minus",59:"Exponent",60:"Multiply",61:"Divide",62:"Modulo",63:"Not",64:"Or",65:"And",66:"Xor",67:"EqualTo",68:"NotEqualTo",69:"GreaterThan",70:"GreaterThanOrEqualTo",71:"LessThan",72:"LessThanOrEqualTo",74:"Comma",75:"True",76:"False",77:"Number",78:"String",79:"Null",80:"BeginInlineExp",81:"EndInlineExp"},productions_:[0,[3,2],[4,1],[4,2],[4,1],[4,2],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,2],[7,2],[7,2],[17,1],[17,1],[17,2],[17,2],[20,1],[8,1],[8,1],[8,2],[15,1],[15,2],[23,4],[6,6],[6,4],[6,2],[30,3],[30,2],[32,4],[32,2],[29,5],[29,5],[29,3],[34,2],[34,3],[34,2],[34,2],[34,3],[34,2],[9,1],[9,5],[10,3],[10,4],[39,1],[39,2],[40,1],[40,1],[40,1],[12,4],[12,4],[13,3],[11,3],[11,3],[44,4],[45,4],[45,6],[26,1],[26,1],[26,3],[26,2],[26,3],[26,3],[26,3],[26,3],[26,3],[26,3],[26,2],[26,3],[26,3],[26,3],[26,3],[26,3],[26,3],[26,3],[26,3],[26,3],[53,3],[53,4],[73,3],[73,1],[52,1],[52,1],[52,1],[41,1],[41,1],[41,1],[41,1],[41,1],[21,3]],performAction:function(e,t,n,s,i,r,a){var o=r.length-1;switch(i){case 1:return r[o-1].flat();case 2:case 4:case 7:case 8:case 9:case 10:case 11:case 21:case 46:case 82:case 20:this.$=[r[o]];break;case 3:case 22:this.$=r[o-1].concat(r[o]);break;case 5:case 47:this.$=r[o-1].concat([r[o]]);break;case 6:case 60:case 15:case 48:case 49:case 59:case 83:case 84:this.$=r[o];break;case 12:case 14:case 28:case 31:case 32:case 54:case 61:case 25:case 39:case 41:this.$=r[o-1];break;case 13:this.$=r[o-1].map((e=>Object.assign(e,{hashtags:r[o]})));break;case 16:this.$=r[o].substring(1);break;case 17:this.$=r[o-1].concat(r[o].substring(1));break;case 18:this.$=r[o-1].substring(1).concat(r[o]);break;case 19:this.$=new s.TextNode(r[o],this._$);break;case 23:this.$=[r[o].substring(1)];break;case 24:this.$=[r[o-1].substring(1)].concat(r[o]);break;case 26:this.$=new s.IfNode(r[o-5],r[o-3].flat());break;case 27:this.$=new s.IfElseNode(r[o-3],r[o-1].flat(),r[o]);break;case 29:case 30:this.$=void 0;break;case 33:this.$=new s.ElseNode(r[o-3].flat());break;case 34:this.$=new s.ElseIfNode(r[o-4],r[o-3].flat());break;case 35:this.$=new s.ElseIfNode(r[o-2],r[o-1].flat(),r[o]);break;case 36:this.$={text:r[o]};break;case 37:this.$={text:r[o-1],conditional:r[o]};break;case 38:this.$=T(T({},r[o-1]),{},{hashtags:r[o]});break;case 40:this.$=T(T({},r[o-2]),{},{hashtags:r[o-1]});break;case 42:this.$=new s.DialogShortcutNode(r[o].text,void 0,this._$,r[o].hashtags,r[o].conditional);break;case 43:this.$=new s.DialogShortcutNode(r[o-4].text,r[o-1].flat(),this._$,r[o-4].hashtags,r[o-4].conditional);break;case 44:this.$=new s.FunctionResultNode(r[o-1],[],this._$);break;case 45:this.$=new s.FunctionResultNode(r[o-2],r[o-1],this._$);break;case 50:this.$=new s.TextNode(r[o]);break;case 51:case 52:this.$=new s.JumpNode(r[o-1]);break;case 53:this.$=new s.StopNode;break;case 55:this.$=null;break;case 56:this.$=new s.SetVariableEqualToNode(r[o-2].substring(1),r[o]);break;case 57:this.$=null,s.registerDeclaration(r[o-2].substring(1),r[o]);break;case 58:this.$=null,s.registerDeclaration(r[o-4].substring(1),r[o-2],r[o]);break;case 62:this.$=new s.UnaryMinusExpressionNode(r[o]);break;case 63:this.$=new s.ArithmeticExpressionAddNode(r[o-2],r[o]);break;case 64:this.$=new s.ArithmeticExpressionMinusNode(r[o-2],r[o]);break;case 65:this.$=new s.ArithmeticExpressionExponentNode(r[o-2],r[o]);break;case 66:this.$=new s.ArithmeticExpressionMultiplyNode(r[o-2],r[o]);break;case 67:this.$=new s.ArithmeticExpressionDivideNode(r[o-2],r[o]);break;case 68:this.$=new s.ArithmeticExpressionModuloNode(r[o-2],r[o]);break;case 69:this.$=new s.NegatedBooleanExpressionNode(r[o]);break;case 70:this.$=new s.BooleanOrExpressionNode(r[o-2],r[o]);break;case 71:this.$=new s.BooleanAndExpressionNode(r[o-2],r[o]);break;case 72:this.$=new s.BooleanXorExpressionNode(r[o-2],r[o]);break;case 73:this.$=new s.EqualToExpressionNode(r[o-2],r[o]);break;case 74:this.$=new s.NotEqualToExpressionNode(r[o-2],r[o]);break;case 75:this.$=new s.GreaterThanExpressionNode(r[o-2],r[o]);break;case 76:this.$=new s.GreaterThanOrEqualToExpressionNode(r[o-2],r[o]);break;case 77:this.$=new s.LessThanExpressionNode(r[o-2],r[o]);break;case 78:this.$=new s.LessThanOrEqualToExpressionNode(r[o-2],r[o]);break;case 79:this.$=new s.FunctionResultNode(r[o-2],[]);break;case 80:this.$=new s.FunctionResultNode(r[o-3],r[o-1]);break;case 81:this.$=r[o-2].concat([r[o]]);break;case 85:this.$=new s.VariableNode(r[o].substring(1));break;case 86:case 87:this.$=new s.BooleanLiteralNode(r[o]);break;case 88:this.$=new s.NumericLiteralNode(r[o]);break;case 89:this.$=new s.StringLiteralNode(r[o]);break;case 90:this.$=new s.NullLiteralNode(r[o]);break;case 91:this.$=new s.InlineExpressionNode(r[o-1],this._$)}},table:[{3:1,4:2,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:y,19:f,20:13,21:14,23:5,24:m,34:15,35:g,80:N},{1:[3]},{5:[1,21],6:22,7:23,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:y,19:f,20:13,21:14,23:5,24:m,34:15,35:g,80:N},E(b,[2,2],{16:w}),E(b,[2,4],{15:26,14:O,16:v,22:$}),{16:[1,29]},E(L,[2,6],{20:13,21:14,17:16,8:30,18:y,19:f,80:N}),E(A,[2,7]),E(A,[2,8]),E(A,[2,9]),E(A,[2,10]),E(A,[2,11]),{25:I,38:k,42:C,43:S,44:33,45:34,46:_,49:q},E(A,[2,20]),E(A,[2,21]),E(b,[2,42],{15:40,14:[1,41],16:[1,39],22:$}),E(P,[2,19],{19:M}),{21:49,26:43,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{8:58,17:16,18:y,19:f,20:13,21:14,80:N},E(A,[2,15]),E([5,14,16,22,24,35,37,80],[2,16],{17:59,18:y,19:f}),{1:[2,1]},E(b,[2,3],{16:w}),E(b,[2,5],{15:26,14:O,16:v,22:$}),E(H,[2,28]),E(A,[2,12]),E(A,[2,13]),E(A,[2,14]),E([5,14,16,18,19,24,35,37,80],[2,23],{15:60,22:$}),{4:61,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:y,19:f,20:13,21:14,23:5,24:m,34:15,35:g,80:N},E(L,[2,22],{20:13,21:14,17:16,8:30,18:y,19:f,80:N}),{21:49,26:62,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{21:66,27:[1,63],38:z,39:64,40:65,41:67,75:G,76:V,77:U,78:X,79:J,80:N},{27:[1,69]},{27:[1,70]},{21:72,38:[1,71],80:N},{27:[1,73]},{47:[1,74]},{47:[1,75]},E(A,[2,41],{36:[1,76]}),E([5,16,18,19,22,24,35,37,80],[2,38],{14:[1,77]}),E(A,[2,39]),E(A,[2,17]),{57:Z,58:W,59:K,60:Q,61:Y,62:ee,64:te,65:ne,66:se,67:ie,68:re,69:ae,70:oe,71:de,72:le,81:[1,78]},E(ce,[2,59]),E(ce,[2,60]),{21:49,26:94,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{21:49,26:95,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{21:49,26:96,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},E(ce,[2,83]),E(ce,[2,84]),E(ce,[2,85]),{54:[1,97]},E(he,[2,86]),E(he,[2,87]),E(he,[2,88]),E(he,[2,89]),E(he,[2,90]),E([5,14,16,22,35,37],[2,36],{20:13,21:14,17:16,8:30,23:98,18:y,19:f,24:[1,99],80:N}),E(P,[2,18],{19:M}),E(A,[2,24]),{6:22,7:23,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:y,19:f,20:13,21:14,23:5,24:[1,100],29:101,30:102,32:103,34:15,35:g,80:N},{27:[1,104],57:Z,58:W,59:K,60:Q,61:Y,62:ee,64:te,65:ne,66:se,67:ie,68:re,69:ae,70:oe,71:de,72:le},E(A,[2,44]),{21:66,27:[1,105],38:z,40:106,41:67,75:G,76:V,77:U,78:X,79:J,80:N},E(ue,[2,46]),E(ue,[2,48]),E(ue,[2,49]),E(ue,[2,50]),E(A,[2,54]),E(A,[2,55]),{27:[1,107]},{27:[1,108]},E(A,[2,53]),{48:[1,109]},{48:[1,110]},{4:111,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:y,19:f,20:13,21:14,23:5,24:m,34:15,35:g,80:N},E(A,[2,40]),E([5,14,16,18,19,22,24,27,35,37,38,50,55,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81],[2,91]),{21:49,26:112,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{21:49,26:113,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{21:49,26:114,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{21:49,26:115,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{21:49,26:116,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{21:49,26:117,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{21:49,26:118,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{21:49,26:119,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{21:49,26:120,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{21:49,26:121,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{21:49,26:122,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{21:49,26:123,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{21:49,26:124,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{21:49,26:125,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{21:49,26:126,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{55:[1,127],57:Z,58:W,59:K,60:Q,61:Y,62:ee,64:te,65:ne,66:se,67:ie,68:re,69:ae,70:oe,71:de,72:le},E(pe,[2,62],{62:ee}),E(Te,[2,69],{57:Z,58:W,59:K,60:Q,61:Y,62:ee,64:te,65:ne,66:se,67:ie,68:re,69:ae,70:oe,71:de,72:le}),{21:49,26:130,38:j,41:50,47:D,52:44,53:45,54:R,55:[1,128],56:B,63:F,73:129,75:G,76:V,77:U,78:X,79:J,80:N},E(A,[2,37]),{25:I},{25:I,28:[1,131],31:xe,33:Ee,38:k,42:C,43:S,44:33,45:34,46:_,49:q},E(H,[2,27]),{4:134,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,16:[1,135],17:16,18:y,19:f,20:13,21:14,23:5,24:m,34:15,35:g,80:N},{4:136,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,16:[1,137],17:16,18:y,19:f,20:13,21:14,23:5,24:m,34:15,35:g,80:N},E(A,[2,25]),E(A,[2,45]),E(ue,[2,47]),E(A,[2,51]),E(A,[2,52]),{21:49,26:138,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{21:49,26:139,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{6:22,7:23,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:y,19:f,20:13,21:14,23:5,24:m,34:15,35:g,37:[1,140],80:N},E(ye,[2,63],{59:K,60:Q,61:Y,62:ee}),E(ye,[2,64],{59:K,60:Q,61:Y,62:ee}),E(pe,[2,65],{62:ee}),E(pe,[2,66],{62:ee}),E(pe,[2,67],{62:ee}),E(Te,[2,68],{57:Z,58:W,59:K,60:Q,61:Y,62:ee,64:te,65:ne,66:se,67:ie,68:re,69:ae,70:oe,71:de,72:le}),E([27,50,55,64,74,81],[2,70],{57:Z,58:W,59:K,60:Q,61:Y,62:ee,65:ne,66:se,67:ie,68:re,69:ae,70:oe,71:de,72:le}),E([27,50,55,64,65,74,81],[2,71],{57:Z,58:W,59:K,60:Q,61:Y,62:ee,66:se,67:ie,68:re,69:ae,70:oe,71:de,72:le}),E([27,50,55,64,65,66,74,81],[2,72],{57:Z,58:W,59:K,60:Q,61:Y,62:ee,67:ie,68:re,69:ae,70:oe,71:de,72:le}),E(fe,[2,73],{57:Z,58:W,59:K,60:Q,61:Y,62:ee}),E(fe,[2,74],{57:Z,58:W,59:K,60:Q,61:Y,62:ee}),E(fe,[2,75],{57:Z,58:W,59:K,60:Q,61:Y,62:ee}),E(fe,[2,76],{57:Z,58:W,59:K,60:Q,61:Y,62:ee}),E(fe,[2,77],{57:Z,58:W,59:K,60:Q,61:Y,62:ee}),E(fe,[2,78],{57:Z,58:W,59:K,60:Q,61:Y,62:ee}),E(ce,[2,61]),E(ce,[2,79]),{55:[1,141],74:[1,142]},E(me,[2,82],{57:Z,58:W,59:K,60:Q,61:Y,62:ee,64:te,65:ne,66:se,67:ie,68:re,69:ae,70:oe,71:de,72:le}),{27:[1,143]},{27:[1,144]},{21:49,26:145,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},{6:22,7:23,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:y,19:f,20:13,21:14,23:5,24:[1,146],34:15,35:g,80:N},E(ge,[2,30]),{6:22,7:23,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:y,19:f,20:13,21:14,23:5,24:[1,147],29:148,30:102,32:103,34:15,35:g,80:N},E(ge,[2,32]),{27:[2,56],57:Z,58:W,59:K,60:Q,61:Y,62:ee,64:te,65:ne,66:se,67:ie,68:re,69:ae,70:oe,71:de,72:le},{27:[2,57],50:[1,149],57:Z,58:W,59:K,60:Q,61:Y,62:ee,64:te,65:ne,66:se,67:ie,68:re,69:ae,70:oe,71:de,72:le},E(A,[2,43]),E(ce,[2,80]),{21:49,26:150,38:j,41:50,47:D,52:44,53:45,54:R,56:B,63:F,75:G,76:V,77:U,78:X,79:J,80:N},E(H,[2,26]),E(ge,[2,29]),{27:[1,151],57:Z,58:W,59:K,60:Q,61:Y,62:ee,64:te,65:ne,66:se,67:ie,68:re,69:ae,70:oe,71:de,72:le},{25:I,28:[1,152],38:k,42:C,43:S,44:33,45:34,46:_,49:q},{25:I,28:[1,153],31:xe,33:Ee,38:k,42:C,43:S,44:33,45:34,46:_,49:q},E(H,[2,35]),{51:[1,154]},E(me,[2,81],{57:Z,58:W,59:K,60:Q,61:Y,62:ee,64:te,65:ne,66:se,67:ie,68:re,69:ae,70:oe,71:de,72:le}),E(ge,[2,31]),{27:[1,155]},{27:[1,156]},{27:[2,58]},E(H,[2,33]),E(H,[2,34])],defaultActions:{21:[2,1],154:[2,58]},parseError:function(e,t){if(!t.recoverable){var n=new Error(e);throw n.hash=t,n}this.trace(e)},parse:function(e){var t=this,n=[0],s=[null],i=[],r=this.table,a="",o=0,d=0,l=0,c=2,h=1,u=i.slice.call(arguments,1),p=Object.create(this.lexer),T={yy:{}};for(var x in this.yy)Object.prototype.hasOwnProperty.call(this.yy,x)&&(T.yy[x]=this.yy[x]);p.setInput(e,T.yy),T.yy.lexer=p,T.yy.parser=this,void 0===p.yylloc&&(p.yylloc={});var E=p.yylloc;i.push(E);var y=p.options&&p.options.ranges;"function"==typeof T.yy.parseError?this.parseError=T.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var f,m,g,N,b,w,O,v,$,L=function(){var e;return"number"!=typeof(e=p.lex()||h)&&(e=t.symbols_[e]||e),e},A={};;){if(g=n[n.length-1],this.defaultActions[g]?N=this.defaultActions[g]:(null==f&&(f=L()),N=r[g]&&r[g][f]),void 0===N||!N.length||!N[0]){var I="";for(w in $=[],r[g])this.terminals_[w]&&w>c&&$.push("'"+this.terminals_[w]+"'");I=p.showPosition?"Parse error on line "+(o+1)+":\n"+p.showPosition()+"\nExpecting "+$.join(", ")+", got '"+(this.terminals_[f]||f)+"'":"Parse error on line "+(o+1)+": Unexpected "+(f==h?"end of input":"'"+(this.terminals_[f]||f)+"'"),this.parseError(I,{text:p.match,token:this.terminals_[f]||f,line:p.yylineno,loc:E,expected:$})}if(N[0]instanceof Array&&N.length>1)throw new Error("Parse Error: multiple actions possible at state: "+g+", token: "+f);switch(N[0]){case 1:n.push(f),s.push(p.yytext),i.push(p.yylloc),n.push(N[1]),f=null,m?(f=m,m=null):(d=p.yyleng,a=p.yytext,o=p.yylineno,E=p.yylloc,l>0&&l--);break;case 2:if(O=this.productions_[N[1]][1],A.$=s[s.length-O],A._$={first_line:i[i.length-(O||1)].first_line,last_line:i[i.length-1].last_line,first_column:i[i.length-(O||1)].first_column,last_column:i[i.length-1].last_column},y&&(A._$.range=[i[i.length-(O||1)].range[0],i[i.length-1].range[1]]),void 0!==(b=this.performAction.apply(A,[a,d,o,T.yy,N[1],s,i].concat(u))))return b;O&&(n=n.slice(0,-1*O*2),s=s.slice(0,-1*O),i=i.slice(0,-1*O)),n.push(this.productions_[N[1]][0]),s.push(A.$),i.push(A._$),v=r[n[n.length-2]][n[n.length-1]],n.push(v);break;case 3:return!0}}return!0}};function be(){this.yy={}}be.prototype=Ne,Ne.Parser=be,Ne.lexer=new class{constructor(){this.states=u(),this.state="base",this.originalText="",this.lines=[],this.indentation=[[0,!1]],this.shouldTrackNextIndentation=!1,this.previousLevelOfIndentation=0,this.reset()}reset(){this.yytext="",this.yylloc={first_column:1,first_line:1,last_column:1,last_line:1},this.yylineno=1}lex(){if(this.isAtTheEndOfText()){this.yytext="";const e=this.indentation.pop();return e&&e[1]?"Dedent":"EndOfInput"}return this.isAtTheEndOfLine()?(this.advanceLine(),"EndOfLine"):this.lexNextTokenOnCurrentLine()}advanceLine(){this.yylineno+=1;const e=this.getCurrentLine().replace(/\t/,"    ");this.lines[this.yylineno-1]=e,this.previousLevelOfIndentation=this.getLastRecordedIndentation()[0],this.yytext="",this.yylloc={first_column:1,first_line:this.yylineno,last_column:1,last_line:this.yylineno}}lexNextTokenOnCurrentLine(){const e=this.getCurrentLineIndentation();if(this.shouldTrackNextIndentation&&e>this.previousLevelOfIndentation)return this.indentation.push([e,!0]),this.shouldTrackNextIndentation=!1,this.yylloc.first_column=this.yylloc.last_column,this.yylloc.last_column+=e,this.yytext="","Indent";if(e<this.getLastRecordedIndentation()[0]){if(this.indentation.pop()[1])return this.yytext="",this.previousLevelOfIndentation=this.getLastRecordedIndentation()[0],"Dedent";this.lexNextTokenOnCurrentLine()}e===this.previousLevelOfIndentation&&1===this.yylloc.last_column&&(this.yylloc.last_column+=e);const t=this.getState().transitions;for(let n=0,s=t.length;n<s;n+=1){const s=t[n],i=this.getCurrentLine().substring(this.yylloc.last_column-1).match(s.regex);if(null!==i&&0===i.index){const t=i[0];this.yytext=this.getCurrentLine().substr(this.yylloc.last_column-1,t.length),"String"===s.token&&(this.yytext=this.yytext.substring(1,this.yytext.length-1).replace(/\\/g,"")),this.yylloc.first_column=this.yylloc.last_column,this.yylloc.last_column+=t.length,s.state&&(this.setState(s.state),this.shouldTrackNextIndentation&&this.getLastRecordedIndentation()[0]<e&&this.indentation.push([e,!1]));const n=this.states[s.state],r=!n||n.transitions.find((e=>"Text"===e.token));if("EndInlineExp"!==s.token&&"EscapedCharacter"!==s.token||!r){const e=this.getCurrentLine().substring(this.yylloc.last_column-1).match(/^\s*/);e[0]&&(this.yylloc.last_column+=e[0].length)}return s.token}}throw new Error(`Invalid syntax in: ${this.getCurrentLine()}`)}setState(e){if(void 0===this.states[e])throw new Error(`Cannot set the unknown state [${e}]`);this.state=e,this.getState().isTrackingNextIndentation&&(this.shouldTrackNextIndentation=!0)}setInput(e){this.originalText=e.replace(/(\r\n)/g,"\n").replace(/\r/g,"\n").replace(/[\n\r]+$/,""),this.lines=this.originalText.split("\n"),this.reset()}getState(){return this.states[this.state]}getCurrentLine(){return this.lines[this.yylineno-1]}getCurrentLineIndentation(){return this.getCurrentLine().match(/^(\s*)/g)[0].length}getLastRecordedIndentation(){return 0===this.indentation.length?[0,!1]:this.indentation[this.indentation.length-1]}isAtTheEndOfText(){return this.isAtTheEndOfLine()&&this.yylloc.first_line>=this.lines.length}isAtTheEndOfLine(){return this.yylloc.last_column>this.getCurrentLine().length}},Ne.yy=l,Ne.yy.declarations={},Ne.yy.registerDeclaration=function(e,t,n){if(!this.areDeclarationsHandled){if(this.declarations[e])throw new Error(`Duplicate declaration found for variable: ${e}`);this.declarations[e]={variableName:e,expression:t,explicitType:n}}};const we=Ne;class Oe{}class ve extends Oe{constructor(e,t=!0,n=[],s){super(),this.text=e,this.isAvailable=t,this.hashtags=n,this.metadata=s}}const $e=class extends Oe{constructor(e,t,n){super(),this.text=e,this.hashtags=t,this.metadata=n}},Le=class extends Oe{constructor(e,t,n,s){super(),this.name=e,this.args=t,this.hashtags=n,this.metadata=s}},Ae=class extends Oe{constructor(e,t){super(),this.options=e.map((e=>new ve(e.text,e.isAvailable,e.hashtags))),this.metadata=t}select(e=-1){if(e<0||e>=this.options.length)throw new Error(`Cannot select option #${e}, there are ${this.options.length} options`);this.selected=e}};var Ie=n(826),ke=n.n(Ie),Ce=n(722),Se=n.n(Ce);function _e(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function qe(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const Pe=l.types,Me={Runner:class{constructor(){this.yarnNodes={},this.variables=new(ke()),this.functions={},this.visited={},this.registerFunction("visited",(e=>!!this.visited[e]))}load(e){let t=e;"string"==typeof e&&(t=Se()(e)),t.forEach((e=>{if(!e.title)throw new Error(`Node needs a title: ${JSON.stringify(e)}`);if(e.title.split(".").length>1)throw new Error(`Node title cannot contain a dot: ${e.title}`);if(!e.body)throw new Error(`Node needs a body: ${JSON.stringify(e)}`);if(this.yarnNodes[e.title])throw new Error(`Duplicate node title: ${e.title}`);this.yarnNodes[e.title]=e})),we.yy.areDeclarationsHandled=!1,we.yy.declarations={},this.handleDeclarations(t),we.yy.areDeclarationsHandled=!0}setVariableStorage(e){if("function"!=typeof e.set||"function"!=typeof e.get)throw new Error('Variable Storage object must contain both a "set" and "get" function');this.variables=e}handleDeclarations(e){const t={Number:0,String:"",Boolean:!1},n=e.reduce(((e,t)=>[...e,...t.body.split(/\r?\n+/)]),[]).reduce(((e,t)=>t.match(/^<<declare .+>>/)?[...e,t]:e),[]);n.length&&we.parse(n.join("\n")),Object.entries(we.yy.declarations).forEach((([e,{expression:n,explicitType:s}])=>{const i=this.evaluateExpressionOrLiteral(n);if(s&&typeof i!=typeof t[s])throw new Error(`Cannot declare value ${i} as type ${s} for variable ${e}`);this.variables.get(e)||this.variables.set(e,i)}))}registerFunction(e,t){if("function"!=typeof t)throw new Error("Registered function must be...well...a function");this.functions[e]=t}*run(e){const t=this.yarnNodes[e];if(void 0===t)throw new Error(`Node "${e}" does not exist`);this.visited[e]=!0;const n=Array.from(we.parse(t.body)),s=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?_e(Object(n),!0).forEach((function(t){qe(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):_e(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},t);return delete s.body,yield*this.evalNodes(n,s,!0)}*evalNodes(e,t,n){let s=[],i=null,r="";const a=e.filter(Boolean);for(let e=0;e<a.length;e+=1){const o=a[e],d=a[e+1];if(i instanceof Pe.Shortcut&&!(o instanceof Pe.Shortcut)){const e=yield*this.handleShortcuts(s,t);if(e&&e.stop)return e;s=[]}if(o instanceof Pe.Text||o instanceof Pe.Expression)r+=this.evaluateExpressionOrLiteral(o).toString(),d&&o.lineNum===d.lineNum&&(d instanceof Pe.Text||d instanceof Pe.Expression)||(yield new $e(r,o.hashtags,t),r="");else if(o instanceof Pe.Shortcut)s.push(o);else if(o instanceof Pe.Assignment)this.evaluateAssignment(o);else if(o instanceof Pe.Conditional){const e=this.evaluateConditional(o);if(e){const n=yield*this.evalNodes(e,t);if(n&&n.stop)return n}}else{if("JumpNode"===o.type)return yield*this.run(o.destination),n?void 0:{stop:!0};if("StopNode"===o.type)return n?void 0:{stop:!0};const e=o.args.map(this.evaluateExpressionOrLiteral,this);yield new Le(o.functionName,e,o.hashtags,t)}i=o}if(s.length>0)return yield*this.handleShortcuts(s,t)}*handleShortcuts(e,t){const n=e.map((e=>{let t=!0,n="";return e.conditionalExpression&&!this.evaluateExpressionOrLiteral(e.conditionalExpression)&&(t=!1),n=e.text.reduce(((e,t)=>e+this.evaluateExpressionOrLiteral(t).toString()),""),Object.assign(e,{isAvailable:t,text:n})})),s=new Ae(n,t);if(yield s,"number"!=typeof s.selected)throw new Error("No option selected before resuming dialogue");{const e=n[s.selected];if(e.content)return yield*this.evalNodes(e.content,t)}}evaluateAssignment(e){const t=this.evaluateExpressionOrLiteral(e.expression),n=this.variables.get(e.variableName);if(n&&typeof n!=typeof t)throw new Error(`Variable ${e.variableName} is already type ${typeof n}; cannot set equal to ${t} of type ${typeof t}`);this.variables.set(e.variableName,t)}evaluateConditional(e){if("IfNode"===e.type){if(this.evaluateExpressionOrLiteral(e.expression))return e.statement}else{if("IfElseNode"!==e.type&&"ElseIfNode"!==e.type)return e.statement;if(this.evaluateExpressionOrLiteral(e.expression))return e.statement;if(e.elseStatement)return this.evaluateConditional(e.elseStatement)}return null}evaluateFunctionCall(e){if(this.functions[e.functionName])return this.functions[e.functionName](...e.args.map(this.evaluateExpressionOrLiteral,this));throw new Error(`Function "${e.functionName}" not found`)}evaluateExpressionOrLiteral(e){const t={UnaryMinusExpressionNode:e=>-e,ArithmeticExpressionAddNode:(e,t)=>e+t,ArithmeticExpressionMinusNode:(e,t)=>e-t,ArithmeticExpressionExponentNode:(e,t)=>e**t,ArithmeticExpressionMultiplyNode:(e,t)=>e*t,ArithmeticExpressionDivideNode:(e,t)=>e/t,ArithmeticExpressionModuloNode:(e,t)=>e%t,NegatedBooleanExpressionNode:e=>!e,BooleanOrExpressionNode:(e,t)=>e||t,BooleanAndExpressionNode:(e,t)=>e&&t,BooleanXorExpressionNode:(e,t)=>!!(e^t),EqualToExpressionNode:(e,t)=>e===t,NotEqualToExpressionNode:(e,t)=>e!==t,GreaterThanExpressionNode:(e,t)=>e>t,GreaterThanOrEqualToExpressionNode:(e,t)=>e>=t,LessThanExpressionNode:(e,t)=>e<t,LessThanOrEqualToExpressionNode:(e,t)=>e<=t,TextNode:e=>e.text,NumericLiteralNode:e=>parseFloat(e.numericLiteral),StringLiteralNode:e=>`${e.stringLiteral}`,BooleanLiteralNode:e=>"true"===e.booleanLiteral,VariableNode:e=>this.variables.get(e.variableName),FunctionResultNode:e=>this.evaluateFunctionCall(e),InlineExpressionNode:e=>e}[e.type];if(!t)throw new Error(`node type not recognized: ${e.type}`);return t(e instanceof Pe.Expression?this.evaluateExpressionOrLiteral(e.expression||e.expression1):e,e.expression2?this.evaluateExpressionOrLiteral(e.expression2):e)}},TextResult:$e,CommandResult:Le,OptionsResult:Ae},je=Me})(),s})()}));